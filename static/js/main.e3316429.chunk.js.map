{"version":3,"sources":["Login.js","NewAccount.js","Vector.svg","Vector2.svg","Form.jsx","ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["token2","Login","useState","identifier","setIdentifier","password","setPassword","token","setToken","history","useHistory","className","value","type","name","placeholder","onChange","e","target","onClick","axios","post","then","response","console","log","status","request","JSON","parse","jwt","push","catch","error","NewAccount","username","setUsername","email","setEmail","onSubmit","initialValue","setValue","resetValue","useInputValue","preventDefault","ToDoList","showText","setShowText","showTextEdit","setShowTextEdit","onClickClose","onClickCloseEdit","todos","setTodos","listName","task","nametask","isDone","lists","setLists","id","setId","listImport","setListImport","dynamic","setDynamic","nameListImport","setNameListImport","taskImport","setTaskImport","toggleComplete","i","map","todo","k","handleChangeListName","prevState","handleChangeIsDone","handleChangeTaskName","handleSave","defaults","headers","common","useEffect","loadDataOnlyOnce","get","data","length","handleEdit","result","handleUpdate","put","handleDelete","delete","TextEdit","autoFocus","checked","readOnly","anObjectTask","Form","Text","src","logout","alt","logoutArrow","filter","anObject","toLowerCase","includes","created_at","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3316429.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState} from \"react\"\r\nimport \"./login.css\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from \"axios\"\r\n\r\n\r\nexport let token2 = ''\r\n\r\nfunction Login() {\r\n    const [identifier, setIdentifier] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [token, setToken] = useState('');\r\n    \r\n    token2 = token;\r\n\r\n    let history=useHistory();\r\n\r\n    function handleCreateButton() {\r\n        history.push(\"/newAccount\");\r\n    }\r\n\r\n\r\n    const handleSubmit = () => {\r\n\r\n        axios.post('https://recruitment.ultimate.systems/auth/local',{\r\n            identifier: identifier,\r\n            password: password\r\n        })\r\n        .then(function (response) {\r\n          console.log(response);\r\n          console.log(response.status);\r\n          console.log(response.request.response);\r\n        \r\n          setToken(JSON.parse(response.request.response).jwt)\r\n\r\n\r\n         // console.log(token)\r\n\r\n          history.push(\"/todoList\")\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      }\r\n\r\n\r\n     // console.log({token2})\r\n\r\n    return (\r\n        <div className=\"login-panel\">\r\n            <div className=\"title\">\r\n                <p>Login</p>\r\n            </div>\r\n\r\n            <div className=\"inputs\">\r\n                <div className=\"username\">\r\n                    \r\n                        <input\r\n                            value={identifier} \r\n                            className=\"input-username\"\r\n                            type=\"text\"\r\n                            name=\"emailOrUsername\" \r\n                            placeholder=\"Email or Username\" \r\n                            onChange={e => setIdentifier(e.target.value)}\r\n                        />\r\n                    \r\n                </div>\r\n                <div className=\"password\">\r\n                   \r\n                        <input\r\n                            value={password} \r\n                            className=\"input-password\"\r\n                            type=\"password\"\r\n                            name=\"emailOrUsername\" \r\n                            placeholder=\"Password\" \r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"login-button\">\r\n                <button type=\"button\" onClick={handleSubmit}>Login</button>\r\n            </div>\r\n\r\n            <div className=\"or\">\r\n                <p>or</p>\r\n            </div>\r\n\r\n            <div className=\"create\" onClick={handleCreateButton}>\r\n                <p>create an account</p>\r\n            </div>\r\n\r\n    \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n","import React from 'react'\r\nimport { useState} from \"react\"\r\nimport \"./NewAccount.css\"\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport axios from \"axios\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction NewAccount() {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n   \r\n    const handleSubmit = () => {\r\n\r\n      axios.post('https://recruitment.ultimate.systems/auth/local/register',{\r\n        username: username,\r\n        email: email,\r\n        password: password\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        console.log(username, email, password)\r\n        history.push(\"/\")\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        console.log(username, email, password)\r\n      });\r\n    }\r\n\r\n    let history=useHistory();\r\n\r\n    function returnButton() {\r\n        history.push(\"/\");\r\n    }\r\n \r\n    return (\r\n        <div className=\"registration\">\r\n            <div className=\"arrow\">\r\n                <ArrowBackIcon onClick={returnButton}/>\r\n            </div>\r\n\r\n            <div className=\"create-text\">\r\n                <p>Create an new account</p>\r\n            </div>\r\n\r\n            <div className=\"inputs-newAccount\">\r\n                    \r\n                        \r\n                        <input\r\n                            value={username} \r\n                            className=\"input-username-newAccount\"\r\n                            type=\"text\"\r\n                            name=\"username\" \r\n                            placeholder=\"Username\" \r\n                            onChange={e => setUsername(e.target.value)}\r\n                        />\r\n                        <input\r\n                            value={email} \r\n                            className=\"input-email-newAccount\"\r\n                            type=\"text\"\r\n                            name=\"email\" \r\n                            placeholder=\"Email\" \r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                        <input\r\n                            value={password} \r\n                            className=\"input-password-newAccount\"\r\n                            type=\"password\"\r\n                            name=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <input\r\n                            value={password} \r\n                            className=\"input-re-password-newAccount\"\r\n                            type=\"password\"\r\n                            name=\"rePassword-newAccount\" \r\n                            placeholder=\"Repeat password\" \r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n\r\n\r\n        <button type=\"button\" onClick={handleSubmit} className=\"create-button\"><p>Create</p></button>\r\n     \r\n                \r\n\r\n            </div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default NewAccount","export default __webpack_public_path__ + \"static/media/Vector.02cf749c.svg\";","export default __webpack_public_path__ + \"static/media/Vector2.3c6d235c.svg\";","import React, { useState } from \"react\";\r\nimport \"./ToDoList.css\";\r\n\r\nconst useInputValue = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    onChange: e => setValue(e.target.value),\r\n    resetValue: () => setValue(\"\")\r\n  };\r\n};\r\n\r\nexport default ({onSubmit}) => {\r\n  const {resetValue,...name } = useInputValue(\"\");\r\n\r\n\r\n  return (\r\n    <form className=\"form-from-form\"\r\n        onSubmit={e => {\r\n        e.preventDefault();\r\n        onSubmit(name.value);\r\n        resetValue();\r\n      }}\r\n    >\r\n      <input {...name} \r\n      className=\"new-todos-place\"\r\n      placeholder=\"Task name\"/>\r\n    </form>\r\n  );\r\n};","import React from 'react'\r\nimport \"./ToDoList.css\"\r\nimport logout from \"./Vector.svg\"\r\nimport logoutArrow from \"./Vector2.svg\"\r\nimport {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport Form from \"./Form.jsx\";\r\nimport {token2} from \"./Login\";\r\n//import { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction ToDoList() {\r\n\r\nconst [showText, setShowText] = useState(false);\r\nconst [showTextEdit, setShowTextEdit] = useState(false)\r\nconst onClick = () => setShowText(true);\r\nconst onClickClose = () => setShowText(false); \r\nconst onClickCloseEdit = () => setShowTextEdit(false)\r\nconst [todos, setTodos] = useState([]);\r\nconst [lists, setLists] = useState({listName: \"\", task: [{nametask: \"\", isDone: false}]});\r\nconst [id, setId] = useState();\r\nconst [listImport, setListImport] = useState([]);\r\nconst [dynamic, setDynamic] = useState(\"\")\r\nconst [nameListImport, setNameListImport] = useState('')\r\nconst [taskImport, setTaskImport]= useState([])\r\n//let history=useHistory();\r\n// console.log({token2})\r\n\r\nconst toggleComplete = i =>\r\n  setTodos(\r\n    todos.map(\r\n      (todo, k) =>\r\n        k === i\r\n          ? {\r\n            ...todo,\r\n            isDone: !todo.isDone\r\n           }\r\n          : todo,\r\n    )\r\n  );\r\n\r\nconst handleChangeListName = e => {\r\n  const {name, value} = e.target;\r\n    setLists(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n};\r\n\r\nconst handleChangeIsDone = (isDone) => {\r\n  //   lists.task.isDone = isDone;\r\n\r\n  console.log(lists.task.isDone)\r\n};\r\n\r\nconst handleChangeTaskName = (name) => {\r\n  // lists.task[0].nametask = text;\r\n\r\n  console.log(lists.task.nametask)\r\n  console.log(lists.task.isDone)\r\n\r\n  console.log(lists.task)\r\n  console.log(todos)\r\n}\r\n\r\nconst handleSave = () => {\r\n\r\n  axios.defaults.headers.common={'Authorization': `bearer ${token2}`}\r\n  axios.post('https://recruitment.ultimate.systems/to-do-lists',{\r\n    name: lists.listName,\r\n    task: todos\r\n  })\r\n  .then(function (response) {\r\n    console.log(response);\r\n    console.log(response.status);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\n\r\nuseEffect (() => {\r\n  loadDataOnlyOnce();\r\n},[] );\r\n\r\nconst loadDataOnlyOnce = () => {\r\n  \r\n  axios.defaults.headers.common={'Authorization': `bearer ${token2}`}\r\n  axios.get('https://recruitment.ultimate.systems/to-do-lists',{\r\n\r\n\r\n  })\r\n  .then(function (response) {\r\n          \r\n    console.log(response)\r\n    console.log(response.data.length)\r\n\r\n    setListImport(response.data)\r\n    console.log(listImport)\r\n   })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n    \r\n\r\nconst loadDataOnlyOnce2 = () => {\r\n  axios.defaults.headers.common={'Authorization': `bearer ${token2}`}\r\n  axios.get('https://recruitment.ultimate.systems/to-do-lists/' + `${id}`,{\r\n})\r\n  .then(function (response) {\r\n    //   console.log(response.data);\r\n    setNameListImport(response.data.name);\r\n\r\n    setTaskImport(response.data.task);\r\n    //    console.log(taskImport)\r\n    //    console.log(response.data.task[0].name);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n      \r\n\r\n\r\nconst handleEdit = (result) => {\r\n\r\n  setId(result)\r\n  setShowTextEdit(true);\r\n  console.log(id);\r\n  loadDataOnlyOnce2()\r\n}\r\n\r\nconst handleUpdate = () => {\r\n  axios.defaults.headers.common={'Authorization': `bearer ${token2}`}\r\n  axios.put('https://recruitment.ultimate.systems/to-do-lists/' + `${id}`,{\r\n    name: nameListImport,\r\n    task: todos\r\n    })\r\n    .then(function (response) {\r\n          \r\n      console.log(response);\r\n      setNameListImport(response.data.name);\r\n      //    console.log(response.data.task[0].name);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n}\r\n\r\nconst handleDelete = () => {\r\n  axios.defaults.headers.common={'Authorization': `bearer ${token2}`}\r\n  axios.delete('https://recruitment.ultimate.systems/to-do-lists/' + `${id}`,{\r\n    name: nameListImport,\r\n    task: todos\r\n    })\r\n    .then(function (response) {\r\n          \r\n    console.log(response);\r\n    setNameListImport(response.data.name);\r\n    //    console.log(response.data.task[0].name);\r\n\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n     \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/////////////\r\n\r\n      //div, ktory obsluguje edytowanie listy\r\n\r\n  const TextEdit = () =>  \r\n    <div>\r\n      <div className=\"blurowanie\">\r\n      </div>\r\n      <div className=\"add-new-list\">\r\n        <input \r\n          className=\"input-list-name\"\r\n          placeholder=\"List name\"\r\n          type=\"text\"\r\n          value={nameListImport}\r\n          onChange={e => setNameListImport(e.target.value)}\r\n          name=\"listName\"\r\n          autoFocus\r\n        />\r\n\r\n          <div className=\"add-new-list-line\">\r\n          </div>\r\n\r\n          <div className=\"place-for-new-tasks\">\r\n \r\n            <div>\r\n              {todos.map(({ name, isDone }, i) => (\r\n                <div\r\n                  key={name}\r\n                  onClick={() => toggleComplete(i)}\r\n                  className=\"checkbox-text\"\r\n                >\r\n                  <div className=\"new-task-input\">\r\n                    <input \r\n                      className=\"input-checked\"\r\n                      type=\"checkbox\"\r\n                      checked = {isDone}\r\n                      onChange = {handleChangeIsDone(isDone)}\r\n                      readOnly\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                  </div>\r\n                    <div className=\"place-for-new-task\">\r\n                      {handleChangeTaskName(name)} \r\n                      {name}\r\n                    </div>\r\n                </div>\r\n              ))}\r\n\r\n\r\n              {taskImport.map((anObjectTask, i) => (\r\n\r\n                <div className=\"checkbox-text\">\r\n                  <div className=\"new-task-input\">\r\n                    <input \r\n                      key={`${anObjectTask.isDone}`}\r\n                      className=\"input-checked\"\r\n                      type=\"checkbox\"\r\n                      checked = {anObjectTask.isDone}\r\n                      // onChange = {handleChangeIsDone(isDone)}\r\n                      readOnly\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                  </div>\r\n                  <div className=\"place-for-new-task\">\r\n                    <p key={`${anObjectTask.name}`}>{anObjectTask.name}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"new-todos\">\r\n            <Form\r\n              onSubmit={name => setTodos([{ name, isDone: false }, ...todos])}\r\n            />\r\n          </div>\r\n    \r\n          <div className=\"buttons-add-cancel\">\r\n            <button onClick={handleDelete} type=\"button\" className=\"button-cancel-from-task\"><p>CANCEL</p></button>\r\n            <button  type=\"submit\" className=\"button-add-from-task\"><p>ADD</p></button>\r\n          </div>\r\n\r\n          <div className=\"buttons-add-new-list\">\r\n            <button type=\"button\" className=\"button-cancel\" onClick={onClickCloseEdit}><p>CANCEL</p></button>\r\n            <button type=\"button\" className=\"button-save\" onClick={handleUpdate}><p>SAVE</p></button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n///////////////\r\n      \r\n\r\n\r\n\r\n\r\n    //div, ktory obsluguje dodawanie nowej listy\r\n  const Text = () =>  \r\n    <div>\r\n      <div className=\"blurowanie\">\r\n      </div>\r\n      <div className=\"add-new-list\">\r\n        <input \r\n          className=\"input-list-name\"\r\n          placeholder=\"List name\"\r\n          type=\"text\"\r\n          value={lists.listName}\r\n          onChange={handleChangeListName}\r\n          name=\"listName\"\r\n          autoFocus\r\n        />\r\n\r\n        <div className=\"add-new-list-line\">\r\n        </div>\r\n\r\n        <div className=\"place-for-new-tasks\">\r\n \r\n          <div>\r\n            {todos.map(({ name, isDone }, i) => (\r\n              <div\r\n                key={name}\r\n                onClick={() => toggleComplete(i)}\r\n                className=\"checkbox-text\"\r\n              >\r\n                <div className=\"new-task-input\">\r\n                  <input \r\n                    className=\"input-checked\"\r\n                    type=\"checkbox\"\r\n                    checked = {isDone}\r\n                    onChange = {handleChangeIsDone(isDone)}\r\n                    readOnly\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </div>\r\n                <div className=\"place-for-new-task\">\r\n                  {handleChangeTaskName(name)} \r\n                  {name}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"new-todos\">\r\n          <Form\r\n            onSubmit={name => setTodos([{ name, isDone: false }, ...todos])}\r\n          />\r\n        </div>\r\n    \r\n        <div className=\"buttons-add-cancel\">\r\n          <button onClick={() => setTodos([])} type=\"button\" className=\"button-cancel-from-task\"><p>CANCEL</p></button>\r\n          <button  type=\"submit\" className=\"button-add-from-task\"><p>ADD</p></button>\r\n        </div>\r\n\r\n        <div className=\"buttons-add-new-list\">\r\n          <button type=\"button\" className=\"button-cancel\" onClick={onClickClose}><p>CANCEL</p></button>\r\n          <button type=\"button\" className=\"button-save\" onClick={handleSave}><p>SAVE</p></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wylogowanie\">\r\n        <div className=\"logout-door\">\r\n          <img src={logout} alt=\"Logout\"/>\r\n        </div>\r\n        <div className=\"logout-arrow\">\r\n            <img src={logoutArrow} alt=\"LogoutArrow\"/>\r\n        </div>\r\n      </div>\r\n        {showText ? <Text /> : null }\r\n        {showTextEdit ? <TextEdit /> : null}\r\n        <div className=\"todo-list\">\r\n          <form className='search'>\r\n            <input \r\n              type=\"text\"\r\n              className='search-input'\r\n              placeholder=\"Search\"\r\n              value={dynamic}\r\n              onChange={e => setDynamic(e.target.value)}\r\n            />\r\n            <select \r\n              className='select-input'\r\n              placeholder=\"Sort By\"\r\n              name= \"sortBy\"\r\n            >\r\n              <option>Sort By</option>\r\n              <option value=\"aToZ\">A to Z</option>\r\n              <option value=\"zToA\">Z to A</option>\r\n            </select>\r\n          </form>\r\n\r\n          {listImport.filter((anObject) => {\r\n            if(dynamic === \"\") {\r\n              return anObject\r\n            }else if (anObject.name.toLowerCase().includes(dynamic.toLowerCase())){\r\n              return anObject\r\n            }\r\n            }).map((anObject, i) => (\r\n              <div className=\"todo-element\" onClick={() => handleEdit(anObject.id)} >\r\n                <div className=\"todo-element-name\">\r\n                  <p key={`${anObject.name}`}>{anObject.name}</p>\r\n                </div>\r\n                <div className=\"todo-element-created\">\r\n                  <p key={`${anObject.created_at}`}>{anObject.created_at}</p>\r\n                </div>\r\n                <div className=\"todo-element-complated\">\r\n                  <p key={`${anObject.task.length}`}>\r\n                  All:{anObject.task.length}</p>\r\n                </div>\r\n                \r\n              </div>\r\n           ))}\r\n        \r\n          <div className=\"new-todo\" onClick={onClick}>\r\n            <div className=\"line1\"></div>\r\n            <div className=\"line2\"></div>\r\n          </div>\r\n          anObject.id\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ToDoList\r\n","import './App.css';\nimport Login from \"./Login.js\"\nimport NewAccount from \"./NewAccount\"\nimport ToDoList from \"./ToDoList.js\"\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <div className=\"logo\">\n        <p>ToDo-List</p>\n      </div>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/newAccount' component={NewAccount} />\n          <Route exact path='/todoList' component={ToDoList} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}